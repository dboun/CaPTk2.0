cmake_minimum_required(VERSION 2.8.4)
message(bookisszz)
project(YamlCpp)

set(${PROJECT_NAME}_MAJOR_VERSION 0)
set(${PROJECT_NAME}_MINOR_VERSION 6)
set(${PROJECT_NAME}_PATCH_VERSION 3)
set(${PROJECT_NAME}_VERSION ${${PROJECT_NAME}_MAJOR_VERSION}.${${PROJECT_NAME}_MINOR_VERSION}.${${PROJECT_NAME}_PATCH_VERSION})

file(GLOB_RECURSE SRC_FILES
  "${MITK_EXTERNAL_PROJECT_PREFIX}/src/YamlCpp/src/*"
)

file(GLOB_RECURSE HEADER_FILES
  "${MITK_EXTERNAL_PROJECT_PREFIX}/src/YamlCpp/include/*"
)

set(YamlCpp_HEADERS
  ${HEADER_FILES}
)

set(YamlCpp_SOURCES
  ${SRC_FILES}
)

add_library(YamlCpp ${YamlCpp_HEADERS} ${YamlCpp_SOURCES})
set_target_properties(YamlCpp PROPERTIES
                      SOVERSION ${${PROJECT_NAME}_VERSION})

set(${PROJECT_NAME}_LIBRARIES YamlCpp)

# Install support

install(TARGETS ${${PROJECT_NAME}_LIBRARIES} EXPORT ${PROJECT_NAME}_TARGETS
  LIBRARY DESTINATION lib
  ARCHIVE DESTINATION lib
  RUNTIME DESTINATION bin
  INCLUDES DESTINATION include/${PROJECT_NAME}
)
install(FILES ${YamlCpp_HEADERS}
  DESTINATION include/${PROJECT_NAME}
)

# Config files
configure_file(
  ${PROJECT_NAME}Config.cmake.in
  ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake
  @ONLY
)
configure_file(
  ${CMAKE_CURRENT_SOURCE_DIR}/${PROJECT_NAME}ConfigVersion.cmake.in
  ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake
  @ONLY
)

export(EXPORT ${PROJECT_NAME}_TARGETS
  FILE ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Targets.cmake
)

set(config_package_location lib/cmake/${PROJECT_NAME})
install(EXPORT ${PROJECT_NAME}_TARGETS
  FILE ${PROJECT_NAME}Targets.cmake
  DESTINATION ${config_package_location}
)
install(FILES
    "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake"
    "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake"
  DESTINATION ${config_package_location}
)

find_package_handle_standard_args(YamlCpp
  FOUND_VAR YamlCpp_FOUND
  REQUIRED_VARS YamlCpp_INCLUDE_DIR
)